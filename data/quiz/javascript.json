[
  {
    "question": "Operator mana yang mengembalikan nilai true jika dua nilai yang dibandingkan tidak sama?",
    "answerOptions": [
      {
        "answer": "!==",
        "isCorrect": true
      },
      {
        "answer": "==!"
      },
      {
        "answer": "~"
      },
      {
        "answer": "<>"
      }
    ]
  },
  {
    "question": "Pernyataan mana yang merupakan cara yang benar untuk membuat variabel yang disebut rate dan memberinya nilai 100?",
    "answerOptions": [
      {
        "answer": "let rate = 100",
        "isCorrect": true
      },
      {
        "answer": "let 100 = rate"
      },
      {
        "answer": "rate = 100"
      },
      {
        "answer": "100 = let rate"
      }
    ]
  },
  {
    "question": "Properti mana yang mereferensikan objek DOM yang mengirimkan suatu peristiwa?",
    "answerOptions": [
      {
        "answer": "target",
        "isCorrect": true
      },
      {
        "answer": "self"
      },
      {
        "answer": "object"
      },
      {
        "answer": "source"
      }
    ]
  },
  {
    "question": "Metode mana yang mengubah data JSON menjadi objek JavaScript?",
    "answerOptions": [
      {
        "answer": "JSON.parse()",
        "isCorrect": true
      },
      {
        "answer": "JSON.fromString()"
      },
      {
        "answer": "JSON.toObject()"
      },
      {
        "answer": "JSON.stringify()"
      }
    ]
  },
  {
    "question": "Metode Objek mana yang mengembalikan iterable yang dapat digunakan untuk mengulangi properti suatu objek?",
    "answerOptions": [
      {
        "answer": "Object.keys()",
        "isCorrect": true
      },
      {
        "answer": "Object.get()"
      },
      {
        "answer": "Object.loop()"
      },
      {
        "answer": "Object.values()"
      }
    ]
  },
  {
    "question": "Pernyataan mana yang menetapkan konstruktor Person sebagai induk dari konstruktor Mahasiswa dalam rantai prototipe?",
    "answerOptions": [
      {
        "answer": "Student.prototype = new Person()",
        "isCorrect": true
      },
      {
        "answer": "Student.prototype = Person"
      },
      {
        "answer": "Student.prototype = Person()"
      },
      {
        "answer": "Student.parent = Person"
      }
    ]
  },
  {
    "question": "Manakah dari nilai-nilai berikut ini yang bukan salah Boolean?",
    "answerOptions": [
      {
        "answer": "Boolean('false')",
        "isCorrect": true
      },
      {
        "answer": "Boolean(NaN)"
      },
      {
        "answer": "Boolean('')"
      },
      {
        "answer": "Boolean(0)"
      }
    ]
  },
  {
    "question": "Manakah dari berikut ini yang bukan merupakan kata kunci dalam JavaScript?",
    "answerOptions": [
      {
        "answer": "array",
        "isCorrect": true
      },
      {
        "answer": "this"
      },
      {
        "answer": "catch"
      },
      {
        "answer": "function"
      }
    ]
  },
  {
    "question": "Variabel mana yang merupakan parameter implisit untuk setiap fungsi dalam JavaScript?",
    "answerOptions": [
      {
        "answer": "Arguments",
        "isCorrect": true
      },
      {
        "answer": "args"
      },
      {
        "answer": "argsArray"
      },
      {
        "answer": "argumentsList"
      }
    ]
  },
  {
    "question": "Bagaimana Anda mengimpor perpustakaan lodash sehingga Api tingkat atas tersedia sebagai variabel '_'?",
    "answerOptions": [
      {
        "answer": "import _ from 'lodash'",
        "isCorrect": true
      },
      {
        "answer": "import 'lodash' as _"
      },
      {
        "answer": "import '_' from 'lodash"
      },
      {
        "answer": "import lodash as _ from 'lodash'"
      }
    ]
  }
]